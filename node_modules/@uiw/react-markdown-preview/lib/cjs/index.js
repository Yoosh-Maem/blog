"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _createForOfIteratorHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/createForOfIteratorHelper"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

var _remarkGfm = _interopRequireDefault(require("remark-gfm"));

var _rehypeRaw = _interopRequireDefault(require("rehype-raw"));

var _prismjs = _interopRequireDefault(require("prismjs"));

require("prismjs/components/prism-markup");

var _langs = require("./langs");

var _default = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _ref = props || {},
      className = _ref.className,
      source = _ref.source,
      style = _ref.style,
      onScroll = _ref.onScroll,
      onMouseOver = _ref.onMouseOver,
      _ref$warpperElement = _ref.warpperElement,
      warpperElement = _ref$warpperElement === void 0 ? {} : _ref$warpperElement,
      other = (0, _objectWithoutProperties2.default)(_ref, ["className", "source", "style", "onScroll", "onMouseOver", "warpperElement"]);

  var mdp = /*#__PURE__*/_react.default.createRef();

  var loadedLang = _react.default.useRef(['markup']);

  (0, _react.useEffect)(function () {
    highlight(); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [source]);

  function highlight() {
    return _highlight.apply(this, arguments);
  }

  function _highlight() {
    _highlight = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {
      var codes, _iterator, _step, val, tag, lang;

      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (mdp.current) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return");

            case 2:
              codes = mdp.current.getElementsByTagName('code');
              _iterator = (0, _createForOfIteratorHelper2.default)(codes);
              _context.prev = 4;

              _iterator.s();

            case 6:
              if ((_step = _iterator.n()).done) {
                _context.next = 24;
                break;
              }

              val = _step.value;
              tag = val.parentNode;

              if (!(tag && tag.tagName === 'PRE' && /^language-/.test(val.className.trim()))) {
                _context.next = 22;
                break;
              }

              lang = val.className.trim().replace(/^language-/, '');
              _context.prev = 11;

              if (loadedLang.current.includes(lang)) {
                _context.next = 16;
                break;
              }

              loadedLang.current.push(lang);
              _context.next = 16;
              return (0, _langs.loadLang)(lang);

            case 16:
              _context.next = 18;
              return _prismjs.default.highlightElement(val);

            case 18:
              _context.next = 22;
              break;

            case 20:
              _context.prev = 20;
              _context.t0 = _context["catch"](11);

            case 22:
              _context.next = 6;
              break;

            case 24:
              _context.next = 29;
              break;

            case 26:
              _context.prev = 26;
              _context.t1 = _context["catch"](4);

              _iterator.e(_context.t1);

            case 29:
              _context.prev = 29;

              _iterator.f();

              return _context.finish(29);

            case 32:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[4, 26, 29, 32], [11, 20]]);
    }));
    return _highlight.apply(this, arguments);
  }

  (0, _react.useImperativeHandle)(ref, function () {
    return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {
      lang: loadedLang.current,
      mdp: mdp
    });
  }, [mdp, props]);
  var cls = "wmde-markdown wmde-markdown-color ".concat(className || '');
  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    ref: mdp,
    onScroll: onScroll,
    onMouseOver: onMouseOver
  }, warpperElement, {
    className: cls,
    style: style
  }), /*#__PURE__*/_react.default.createElement(_reactMarkdown.default, (0, _extends2.default)({}, other, {
    plugins: [_remarkGfm.default].concat((0, _toConsumableArray2.default)(other.plugins || [])),
    rehypePlugins: [_rehypeRaw.default].concat((0, _toConsumableArray2.default)(other.rehypePlugins || []))
  }), source || ''));
});

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbmRleC50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJmb3J3YXJkUmVmIiwicHJvcHMiLCJyZWYiLCJjbGFzc05hbWUiLCJzb3VyY2UiLCJzdHlsZSIsIm9uU2Nyb2xsIiwib25Nb3VzZU92ZXIiLCJ3YXJwcGVyRWxlbWVudCIsIm90aGVyIiwibWRwIiwiY3JlYXRlUmVmIiwibG9hZGVkTGFuZyIsInVzZVJlZiIsImhpZ2hsaWdodCIsImN1cnJlbnQiLCJjb2RlcyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwidmFsIiwidGFnIiwicGFyZW50Tm9kZSIsInRhZ05hbWUiLCJ0ZXN0IiwidHJpbSIsImxhbmciLCJyZXBsYWNlIiwiaW5jbHVkZXMiLCJwdXNoIiwiUHJpc20iLCJoaWdobGlnaHRFbGVtZW50IiwiY2xzIiwiZ2ZtIiwicGx1Z2lucyIsInJlaHlwZVJhdyIsInJlaHlwZVBsdWdpbnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7NEJBa0JlQSxlQUFNQyxVQUFOLENBQTJELFVBQUNDLEtBQUQsRUFBUUMsR0FBUixFQUFnQjtBQUFBLGFBQ0lELEtBQUssSUFBSSxFQURiO0FBQUEsTUFDaEZFLFNBRGdGLFFBQ2hGQSxTQURnRjtBQUFBLE1BQ3JFQyxNQURxRSxRQUNyRUEsTUFEcUU7QUFBQSxNQUM3REMsS0FENkQsUUFDN0RBLEtBRDZEO0FBQUEsTUFDdERDLFFBRHNELFFBQ3REQSxRQURzRDtBQUFBLE1BQzVDQyxXQUQ0QyxRQUM1Q0EsV0FENEM7QUFBQSxpQ0FDL0JDLGNBRCtCO0FBQUEsTUFDL0JBLGNBRCtCLG9DQUNkLEVBRGM7QUFBQSxNQUNQQyxLQURPOztBQUV4RixNQUFNQyxHQUFHLGdCQUFHWCxlQUFNWSxTQUFOLEVBQVo7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHYixlQUFNYyxNQUFOLENBQXVCLENBQUMsUUFBRCxDQUF2QixDQUFuQjs7QUFDQSx3QkFBVSxZQUFNO0FBQ2RDLElBQUFBLFNBQVMsR0FESyxDQUVkO0FBQ0QsR0FIRCxFQUdHLENBQUNWLE1BQUQsQ0FISDs7QUFKd0YsV0FTekVVLFNBVHlFO0FBQUE7QUFBQTs7QUFBQTtBQUFBLHlGQVN4RjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQ09KLEdBQUcsQ0FBQ0ssT0FEWDtBQUFBO0FBQUE7QUFBQTs7QUFBQTs7QUFBQTtBQUVRQyxjQUFBQSxLQUZSLEdBRWdCTixHQUFHLENBQUNLLE9BQUosQ0FBWUUsb0JBQVosQ0FBaUMsTUFBakMsQ0FGaEI7QUFBQSxtRUFHb0JELEtBSHBCO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFHYUUsY0FBQUEsR0FIYjtBQUlVQyxjQUFBQSxHQUpWLEdBSWdCRCxHQUFHLENBQUNFLFVBSnBCOztBQUFBLG9CQUtRRCxHQUFHLElBQUlBLEdBQUcsQ0FBQ0UsT0FBSixLQUFnQixLQUF2QixJQUFnQyxhQUFhQyxJQUFiLENBQWtCSixHQUFHLENBQUNmLFNBQUosQ0FBY29CLElBQWQsRUFBbEIsQ0FMeEM7QUFBQTtBQUFBO0FBQUE7O0FBTVlDLGNBQUFBLElBTlosR0FNbUJOLEdBQUcsQ0FBQ2YsU0FBSixDQUFjb0IsSUFBZCxHQUFxQkUsT0FBckIsQ0FBNkIsWUFBN0IsRUFBMkMsRUFBM0MsQ0FObkI7QUFBQTs7QUFBQSxrQkFRYWIsVUFBVSxDQUFDRyxPQUFYLENBQW1CVyxRQUFuQixDQUE0QkYsSUFBNUIsQ0FSYjtBQUFBO0FBQUE7QUFBQTs7QUFTVVosY0FBQUEsVUFBVSxDQUFDRyxPQUFYLENBQW1CWSxJQUFuQixDQUF3QkgsSUFBeEI7QUFUVjtBQUFBLHFCQVVnQixxQkFBU0EsSUFBVCxDQVZoQjs7QUFBQTtBQUFBO0FBQUEscUJBWWNJLGlCQUFNQyxnQkFBTixDQUF1QlgsR0FBdkIsQ0FaZDs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBQUE7O0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FUd0Y7QUFBQTtBQUFBOztBQTJCeEYsa0NBQW9CaEIsR0FBcEIsRUFBeUI7QUFBQSx1RUFBWUQsS0FBWjtBQUFtQnVCLE1BQUFBLElBQUksRUFBRVosVUFBVSxDQUFDRyxPQUFwQztBQUE2Q0wsTUFBQUEsR0FBRyxFQUFIQTtBQUE3QztBQUFBLEdBQXpCLEVBQThFLENBQUNBLEdBQUQsRUFBTVQsS0FBTixDQUE5RTtBQUVBLE1BQU02QixHQUFHLCtDQUF3QzNCLFNBQVMsSUFBSSxFQUFyRCxDQUFUO0FBQ0Esc0JBQ0U7QUFBSyxJQUFBLEdBQUcsRUFBRU8sR0FBVjtBQUFlLElBQUEsUUFBUSxFQUFFSixRQUF6QjtBQUFtQyxJQUFBLFdBQVcsRUFBRUM7QUFBaEQsS0FBaUVDLGNBQWpFO0FBQWlGLElBQUEsU0FBUyxFQUFFc0IsR0FBNUY7QUFBaUcsSUFBQSxLQUFLLEVBQUV6QjtBQUF4RyxtQkFDRSw2QkFBQyxzQkFBRCw2QkFDTUksS0FETjtBQUVFLElBQUEsT0FBTyxHQUFHc0Isa0JBQUgsMENBQWF0QixLQUFLLENBQUN1QixPQUFOLElBQWlCLEVBQTlCLEVBRlQ7QUFHRSxJQUFBLGFBQWEsR0FBR0Msa0JBQUgsMENBQWtCeEIsS0FBSyxDQUFDeUIsYUFBTixJQUF1QixFQUF6QztBQUhmLE1BS0c5QixNQUFNLElBQUksRUFMYixDQURGLENBREY7QUFXRCxDQXpDYyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlSW1wZXJhdGl2ZUhhbmRsZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdE1hcmtkb3duIGZyb20gJ3JlYWN0LW1hcmtkb3duJztcbmltcG9ydCBnZm0gZnJvbSAncmVtYXJrLWdmbSc7XG5pbXBvcnQgcmVoeXBlUmF3IGZyb20gJ3JlaHlwZS1yYXcnO1xuaW1wb3J0IFByaXNtIGZyb20gJ3ByaXNtanMnO1xuaW1wb3J0ICdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tbWFya3VwJztcbmltcG9ydCB7IGxvYWRMYW5nIH0gZnJvbSAnLi9sYW5ncyc7XG5pbXBvcnQgJy4vc3R5bGVzL21hcmtkb3duLmxlc3MnO1xuaW1wb3J0ICcuL3N0eWxlcy9tYXJrZG93bmNvbG9yLmxlc3MnO1xuXG5leHBvcnQgdHlwZSBNYXJrZG93blByZXZpZXdQcm9wcyA9IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIHN0eWxlPzogUmVhY3QuQ1NTUHJvcGVydGllcztcbiAgd2FycHBlckVsZW1lbnQ/OiBSZWFjdC5EZXRhaWxlZEhUTUxQcm9wczxSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sIEhUTUxEaXZFbGVtZW50PjtcbiAgb25TY3JvbGw/OiAoZTogUmVhY3QuVUlFdmVudDxIVE1MRGl2RWxlbWVudD4pID0+IHZvaWQ7XG4gIG9uTW91c2VPdmVyPzogKGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTERpdkVsZW1lbnQ+KSA9PiB2b2lkO1xufSAmIE9taXQ8UmVhY3RNYXJrZG93bi5SZWFjdE1hcmtkb3duT3B0aW9ucywgJ2NoaWxkcmVuJz47XG5cbmV4cG9ydCB0eXBlIE1hcmtkb3duUHJldmlld1JlZiA9IHtcbiAgbWRwOiBSZWFjdC5SZWZPYmplY3Q8SFRNTERpdkVsZW1lbnQ+O1xuICBsYW5nOiBzdHJpbmdbXSxcbn0gJiBNYXJrZG93blByZXZpZXdQcm9wcztcblxuZXhwb3J0IGRlZmF1bHQgUmVhY3QuZm9yd2FyZFJlZjxNYXJrZG93blByZXZpZXdSZWYsIE1hcmtkb3duUHJldmlld1Byb3BzPigocHJvcHMsIHJlZikgPT4ge1xuICBjb25zdCB7IGNsYXNzTmFtZSwgc291cmNlLCBzdHlsZSwgb25TY3JvbGwsIG9uTW91c2VPdmVyLCB3YXJwcGVyRWxlbWVudCA9IHt9LCAuLi5vdGhlciAgfSA9IHByb3BzIHx8IHt9O1xuICBjb25zdCBtZHAgPSBSZWFjdC5jcmVhdGVSZWY8SFRNTERpdkVsZW1lbnQ+KCk7XG4gIGNvbnN0IGxvYWRlZExhbmcgPSBSZWFjdC51c2VSZWY8c3RyaW5nW10+KFsnbWFya3VwJ10pO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGhpZ2hsaWdodCgpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgfSwgW3NvdXJjZV0pO1xuXG4gIGFzeW5jIGZ1bmN0aW9uIGhpZ2hsaWdodCgpIHtcbiAgICBpZiAoIW1kcC5jdXJyZW50KSByZXR1cm47XG4gICAgY29uc3QgY29kZXMgPSBtZHAuY3VycmVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnY29kZScpIGFzIHVua25vd24gYXMgSFRNTEVsZW1lbnRbXTtcbiAgICBmb3IgKGNvbnN0IHZhbCBvZiBjb2Rlcykge1xuICAgICAgY29uc3QgdGFnID0gdmFsLnBhcmVudE5vZGUgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICBpZiAodGFnICYmIHRhZy50YWdOYW1lID09PSAnUFJFJyAmJiAvXmxhbmd1YWdlLS8udGVzdCh2YWwuY2xhc3NOYW1lLnRyaW0oKSkpIHtcbiAgICAgICAgY29uc3QgbGFuZyA9IHZhbC5jbGFzc05hbWUudHJpbSgpLnJlcGxhY2UoL15sYW5ndWFnZS0vLCAnJyk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFsb2FkZWRMYW5nLmN1cnJlbnQuaW5jbHVkZXMobGFuZyBhcyBuZXZlcikpIHtcbiAgICAgICAgICAgIGxvYWRlZExhbmcuY3VycmVudC5wdXNoKGxhbmcpO1xuICAgICAgICAgICAgYXdhaXQgbG9hZExhbmcobGFuZyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGF3YWl0IFByaXNtLmhpZ2hsaWdodEVsZW1lbnQodmFsKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHVzZUltcGVyYXRpdmVIYW5kbGUocmVmLCAoKSA9PiAoeyAuLi5wcm9wcywgbGFuZzogbG9hZGVkTGFuZy5jdXJyZW50LCBtZHAgfSksIFttZHAsIHByb3BzXSk7XG5cbiAgY29uc3QgY2xzID0gYHdtZGUtbWFya2Rvd24gd21kZS1tYXJrZG93bi1jb2xvciAke2NsYXNzTmFtZSB8fCAnJ31gO1xuICByZXR1cm4gKFxuICAgIDxkaXYgcmVmPXttZHB9IG9uU2Nyb2xsPXtvblNjcm9sbH0gb25Nb3VzZU92ZXI9e29uTW91c2VPdmVyfSB7Li4ud2FycHBlckVsZW1lbnR9IGNsYXNzTmFtZT17Y2xzfSBzdHlsZT17c3R5bGV9PlxuICAgICAgPFJlYWN0TWFya2Rvd25cbiAgICAgICAgey4uLm90aGVyfVxuICAgICAgICBwbHVnaW5zPXtbZ2ZtLCAgLi4uKG90aGVyLnBsdWdpbnMgfHwgW10pXX1cbiAgICAgICAgcmVoeXBlUGx1Z2lucz17W3JlaHlwZVJhdywgLi4uKG90aGVyLnJlaHlwZVBsdWdpbnMgfHwgW10pXX1cbiAgICAgID5cbiAgICAgICAge3NvdXJjZSB8fCAnJ31cbiAgICAgIDwvUmVhY3RNYXJrZG93bj5cbiAgICA8L2Rpdj5cbiAgKTtcbn0pO1xuIl19