import * as React from 'react';
import { selectWord } from '../utils/markdownUtils';
export var image = {
  name: 'image',
  keyCommand: 'image',
  shortcuts: 'ctrlcmd+i',
  buttonProps: {
    'aria-label': 'Add image',
    title: 'Add image'
  },
  icon: /*#__PURE__*/React.createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 20 20"
  }, /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    d: "M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z"
  })),
  execute: function execute(state, api) {
    // Select everything
    var newSelectionRange = selectWord({
      text: state.text,
      selection: state.selection
    });
    var state1 = api.setSelectionRange(newSelectionRange); // Replaces the current selection with the image

    var imageTemplate = state1.selectedText || 'https://example.com/your-image.png';
    api.replaceSelection("![](".concat(imageTemplate, ")")); // Adjust the selection to not contain the **

    api.setSelectionRange({
      start: 4 + state1.selection.start,
      end: 4 + state1.selection.start + imageTemplate.length
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9pbWFnZS50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJzZWxlY3RXb3JkIiwiaW1hZ2UiLCJuYW1lIiwia2V5Q29tbWFuZCIsInNob3J0Y3V0cyIsImJ1dHRvblByb3BzIiwidGl0bGUiLCJpY29uIiwiZXhlY3V0ZSIsInN0YXRlIiwiYXBpIiwibmV3U2VsZWN0aW9uUmFuZ2UiLCJ0ZXh0Iiwic2VsZWN0aW9uIiwic3RhdGUxIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJpbWFnZVRlbXBsYXRlIiwic2VsZWN0ZWRUZXh0IiwicmVwbGFjZVNlbGVjdGlvbiIsInN0YXJ0IiwiZW5kIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUtBLEtBQVosTUFBdUIsT0FBdkI7QUFFQSxTQUFTQyxVQUFULFFBQTJCLHdCQUEzQjtBQUVBLE9BQU8sSUFBTUMsS0FBZSxHQUFHO0FBQzdCQyxFQUFBQSxJQUFJLEVBQUUsT0FEdUI7QUFFN0JDLEVBQUFBLFVBQVUsRUFBRSxPQUZpQjtBQUc3QkMsRUFBQUEsU0FBUyxFQUFFLFdBSGtCO0FBSTdCQyxFQUFBQSxXQUFXLEVBQUU7QUFBRSxrQkFBYyxXQUFoQjtBQUE2QkMsSUFBQUEsS0FBSyxFQUFFO0FBQXBDLEdBSmdCO0FBSzdCQyxFQUFBQSxJQUFJLGVBQ0Y7QUFBSyxJQUFBLEtBQUssRUFBQyxJQUFYO0FBQWdCLElBQUEsTUFBTSxFQUFDLElBQXZCO0FBQTRCLElBQUEsT0FBTyxFQUFDO0FBQXBDLGtCQUNFO0FBQ0UsSUFBQSxJQUFJLEVBQUMsY0FEUDtBQUVFLElBQUEsQ0FBQyxFQUFDO0FBRkosSUFERixDQU4yQjtBQWE3QkMsRUFBQUEsT0FBTyxFQUFFLGlCQUFDQyxLQUFELEVBQW1CQyxHQUFuQixFQUFvQztBQUMzQztBQUNBLFFBQU1DLGlCQUFpQixHQUFHWCxVQUFVLENBQUM7QUFBRVksTUFBQUEsSUFBSSxFQUFFSCxLQUFLLENBQUNHLElBQWQ7QUFBb0JDLE1BQUFBLFNBQVMsRUFBRUosS0FBSyxDQUFDSTtBQUFyQyxLQUFELENBQXBDO0FBQ0EsUUFBTUMsTUFBTSxHQUFHSixHQUFHLENBQUNLLGlCQUFKLENBQXNCSixpQkFBdEIsQ0FBZixDQUgyQyxDQUkzQzs7QUFDQSxRQUFNSyxhQUFhLEdBQUdGLE1BQU0sQ0FBQ0csWUFBUCxJQUF1QixvQ0FBN0M7QUFDQVAsSUFBQUEsR0FBRyxDQUFDUSxnQkFBSixlQUE0QkYsYUFBNUIsUUFOMkMsQ0FPM0M7O0FBQ0FOLElBQUFBLEdBQUcsQ0FBQ0ssaUJBQUosQ0FBc0I7QUFDcEJJLE1BQUFBLEtBQUssRUFBRSxJQUFJTCxNQUFNLENBQUNELFNBQVAsQ0FBaUJNLEtBRFI7QUFFcEJDLE1BQUFBLEdBQUcsRUFBRSxJQUFJTixNQUFNLENBQUNELFNBQVAsQ0FBaUJNLEtBQXJCLEdBQTZCSCxhQUFhLENBQUNLO0FBRjVCLEtBQXRCO0FBSUQ7QUF6QjRCLENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSUNvbW1hbmQsIFRleHRTdGF0ZSwgVGV4dEFwaSB9IGZyb20gJy4vJztcbmltcG9ydCB7IHNlbGVjdFdvcmQgfSBmcm9tICcuLi91dGlscy9tYXJrZG93blV0aWxzJztcblxuZXhwb3J0IGNvbnN0IGltYWdlOiBJQ29tbWFuZCA9IHtcbiAgbmFtZTogJ2ltYWdlJyxcbiAga2V5Q29tbWFuZDogJ2ltYWdlJyxcbiAgc2hvcnRjdXRzOiAnY3RybGNtZCtpJyxcbiAgYnV0dG9uUHJvcHM6IHsgJ2FyaWEtbGFiZWwnOiAnQWRkIGltYWdlJywgdGl0bGU6ICdBZGQgaW1hZ2UnIH0sXG4gIGljb246IChcbiAgICA8c3ZnIHdpZHRoPVwiMTJcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIj5cbiAgICAgIDxwYXRoXG4gICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICBkPVwiTTE1IDljMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem00LTdIMWMtLjU1IDAtMSAuNDUtMSAxdjE0YzAgLjU1LjQ1IDEgMSAxaDE4Yy41NSAwIDEtLjQ1IDEtMVYzYzAtLjU1LS40NS0xLTEtMXptLTEgMTNsLTYtNS0yIDItNC01LTQgOFY0aDE2djExelwiXG4gICAgICAvPlxuICAgIDwvc3ZnPlxuICApLFxuICBleGVjdXRlOiAoc3RhdGU6IFRleHRTdGF0ZSwgYXBpOiBUZXh0QXBpKSA9PiB7XG4gICAgLy8gU2VsZWN0IGV2ZXJ5dGhpbmdcbiAgICBjb25zdCBuZXdTZWxlY3Rpb25SYW5nZSA9IHNlbGVjdFdvcmQoeyB0ZXh0OiBzdGF0ZS50ZXh0LCBzZWxlY3Rpb246IHN0YXRlLnNlbGVjdGlvbiB9KTtcbiAgICBjb25zdCBzdGF0ZTEgPSBhcGkuc2V0U2VsZWN0aW9uUmFuZ2UobmV3U2VsZWN0aW9uUmFuZ2UpO1xuICAgIC8vIFJlcGxhY2VzIHRoZSBjdXJyZW50IHNlbGVjdGlvbiB3aXRoIHRoZSBpbWFnZVxuICAgIGNvbnN0IGltYWdlVGVtcGxhdGUgPSBzdGF0ZTEuc2VsZWN0ZWRUZXh0IHx8ICdodHRwczovL2V4YW1wbGUuY29tL3lvdXItaW1hZ2UucG5nJztcbiAgICBhcGkucmVwbGFjZVNlbGVjdGlvbihgIVtdKCR7aW1hZ2VUZW1wbGF0ZX0pYCk7XG4gICAgLy8gQWRqdXN0IHRoZSBzZWxlY3Rpb24gdG8gbm90IGNvbnRhaW4gdGhlICoqXG4gICAgYXBpLnNldFNlbGVjdGlvblJhbmdlKHtcbiAgICAgIHN0YXJ0OiA0ICsgc3RhdGUxLnNlbGVjdGlvbi5zdGFydCxcbiAgICAgIGVuZDogNCArIHN0YXRlMS5zZWxlY3Rpb24uc3RhcnQgKyBpbWFnZVRlbXBsYXRlLmxlbmd0aCxcbiAgICB9KTtcbiAgfSxcbn07XG4iXX0=