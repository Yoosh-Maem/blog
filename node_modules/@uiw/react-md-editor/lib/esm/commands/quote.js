import * as React from 'react';
import { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord } from '../utils/markdownUtils';
export var quote = {
  name: 'quote',
  keyCommand: 'quote',
  shortcuts: 'ctrlcmd+q',
  buttonProps: {
    'aria-label': 'Insert a quote',
    title: 'Insert a quote'
  },
  icon: /*#__PURE__*/React.createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 520 520"
  }, /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    d: "M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z"
  })),
  execute: function execute(state, api) {
    // Adjust the selection to encompass the whole word if the caret is inside one
    var newSelectionRange = selectWord({
      text: state.text,
      selection: state.selection
    });
    var state1 = api.setSelectionRange(newSelectionRange);
    var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);
    var breaksBefore = Array(breaksBeforeCount + 1).join('\n');
    var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);
    var breaksAfter = Array(breaksAfterCount + 1).join('\n'); // Replaces the current selection with the quote mark up

    api.replaceSelection("".concat(breaksBefore, "> ").concat(state1.selectedText).concat(breaksAfter));
    var selectionStart = state1.selection.start + breaksBeforeCount + 2;
    var selectionEnd = selectionStart + state1.selectedText.length;
    api.setSelectionRange({
      start: selectionStart,
      end: selectionEnd
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9xdW90ZS50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVCZWZvcmUiLCJnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVBZnRlciIsInNlbGVjdFdvcmQiLCJxdW90ZSIsIm5hbWUiLCJrZXlDb21tYW5kIiwic2hvcnRjdXRzIiwiYnV0dG9uUHJvcHMiLCJ0aXRsZSIsImljb24iLCJleGVjdXRlIiwic3RhdGUiLCJhcGkiLCJuZXdTZWxlY3Rpb25SYW5nZSIsInRleHQiLCJzZWxlY3Rpb24iLCJzdGF0ZTEiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImJyZWFrc0JlZm9yZUNvdW50Iiwic3RhcnQiLCJicmVha3NCZWZvcmUiLCJBcnJheSIsImpvaW4iLCJicmVha3NBZnRlckNvdW50IiwiZW5kIiwiYnJlYWtzQWZ0ZXIiLCJyZXBsYWNlU2VsZWN0aW9uIiwic2VsZWN0ZWRUZXh0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBS0EsS0FBWixNQUF1QixPQUF2QjtBQUVBLFNBQ0VDLGlDQURGLEVBRUVDLGdDQUZGLEVBR0VDLFVBSEYsUUFJTyx3QkFKUDtBQU1BLE9BQU8sSUFBTUMsS0FBZSxHQUFHO0FBQzdCQyxFQUFBQSxJQUFJLEVBQUUsT0FEdUI7QUFFN0JDLEVBQUFBLFVBQVUsRUFBRSxPQUZpQjtBQUc3QkMsRUFBQUEsU0FBUyxFQUFFLFdBSGtCO0FBSTdCQyxFQUFBQSxXQUFXLEVBQUU7QUFBRSxrQkFBYyxnQkFBaEI7QUFBa0NDLElBQUFBLEtBQUssRUFBRTtBQUF6QyxHQUpnQjtBQUs3QkMsRUFBQUEsSUFBSSxlQUNGO0FBQUssSUFBQSxLQUFLLEVBQUMsSUFBWDtBQUFnQixJQUFBLE1BQU0sRUFBQyxJQUF2QjtBQUE0QixJQUFBLE9BQU8sRUFBQztBQUFwQyxrQkFDRTtBQUNFLElBQUEsSUFBSSxFQUFDLGNBRFA7QUFFRSxJQUFBLENBQUMsRUFBQztBQUZKLElBREYsQ0FOMkI7QUFhN0JDLEVBQUFBLE9BQU8sRUFBRSxpQkFBQ0MsS0FBRCxFQUFtQkMsR0FBbkIsRUFBb0M7QUFDM0M7QUFDQSxRQUFNQyxpQkFBaUIsR0FBR1gsVUFBVSxDQUFDO0FBQUVZLE1BQUFBLElBQUksRUFBRUgsS0FBSyxDQUFDRyxJQUFkO0FBQW9CQyxNQUFBQSxTQUFTLEVBQUVKLEtBQUssQ0FBQ0k7QUFBckMsS0FBRCxDQUFwQztBQUNBLFFBQU1DLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxpQkFBSixDQUFzQkosaUJBQXRCLENBQWY7QUFDQSxRQUFNSyxpQkFBaUIsR0FBR2xCLGlDQUFpQyxDQUFDZ0IsTUFBTSxDQUFDRixJQUFSLEVBQWNFLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQkksS0FBL0IsQ0FBM0Q7QUFDQSxRQUFNQyxZQUFZLEdBQUdDLEtBQUssQ0FBQ0gsaUJBQWlCLEdBQUcsQ0FBckIsQ0FBTCxDQUE2QkksSUFBN0IsQ0FBa0MsSUFBbEMsQ0FBckI7QUFFQSxRQUFNQyxnQkFBZ0IsR0FBR3RCLGdDQUFnQyxDQUFDZSxNQUFNLENBQUNGLElBQVIsRUFBY0UsTUFBTSxDQUFDRCxTQUFQLENBQWlCUyxHQUEvQixDQUF6RDtBQUNBLFFBQU1DLFdBQVcsR0FBR0osS0FBSyxDQUFDRSxnQkFBZ0IsR0FBRyxDQUFwQixDQUFMLENBQTRCRCxJQUE1QixDQUFpQyxJQUFqQyxDQUFwQixDQVIyQyxDQVUzQzs7QUFDQVYsSUFBQUEsR0FBRyxDQUFDYyxnQkFBSixXQUF3Qk4sWUFBeEIsZUFBeUNKLE1BQU0sQ0FBQ1csWUFBaEQsU0FBK0RGLFdBQS9EO0FBRUEsUUFBTUcsY0FBYyxHQUFHWixNQUFNLENBQUNELFNBQVAsQ0FBaUJJLEtBQWpCLEdBQXlCRCxpQkFBekIsR0FBNkMsQ0FBcEU7QUFDQSxRQUFNVyxZQUFZLEdBQUdELGNBQWMsR0FBR1osTUFBTSxDQUFDVyxZQUFQLENBQW9CRyxNQUExRDtBQUVBbEIsSUFBQUEsR0FBRyxDQUFDSyxpQkFBSixDQUFzQjtBQUNwQkUsTUFBQUEsS0FBSyxFQUFFUyxjQURhO0FBRXBCSixNQUFBQSxHQUFHLEVBQUVLO0FBRmUsS0FBdEI7QUFJRDtBQWpDNEIsQ0FBeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJQ29tbWFuZCwgVGV4dFN0YXRlLCBUZXh0QXBpIH0gZnJvbSAnLi8nO1xuaW1wb3J0IHtcbiAgZ2V0QnJlYWtzTmVlZGVkRm9yRW1wdHlMaW5lQmVmb3JlLFxuICBnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVBZnRlcixcbiAgc2VsZWN0V29yZCxcbn0gZnJvbSAnLi4vdXRpbHMvbWFya2Rvd25VdGlscyc7XG5cbmV4cG9ydCBjb25zdCBxdW90ZTogSUNvbW1hbmQgPSB7XG4gIG5hbWU6ICdxdW90ZScsXG4gIGtleUNvbW1hbmQ6ICdxdW90ZScsXG4gIHNob3J0Y3V0czogJ2N0cmxjbWQrcScsXG4gIGJ1dHRvblByb3BzOiB7ICdhcmlhLWxhYmVsJzogJ0luc2VydCBhIHF1b3RlJywgdGl0bGU6ICdJbnNlcnQgYSBxdW90ZScgfSxcbiAgaWNvbjogKFxuICAgIDxzdmcgd2lkdGg9XCIxMlwiIGhlaWdodD1cIjEyXCIgdmlld0JveD1cIjAgMCA1MjAgNTIwXCI+XG4gICAgICA8cGF0aFxuICAgICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgZD1cIk01MjAsOTUuNzUgTDUyMCwyMjUuNzUgQzUyMCwzNjQuOTA4OTA2IDQ1Ny4xMjc1NzgsNDM3LjA1MDYyNSAzMjUuMDQwNDY5LDQ3Mi40NDMxMjUgQzMwOS41Nzc1NzgsNDc2LjU4Njg3NSAyOTQuMzk2MDE2LDQ2NC44ODk5MjIgMjk0LjM5NjAxNiw0NDguODgxNjQxIEwyOTQuMzk2MDE2LDQxNC40NTcwMzEgQzI5NC4zOTYwMTYsNDA0LjI0Mjg5MSAzMDAuNzIxMzI4LDM5NS4wMjUwNzggMzEwLjMyODEyNSwzOTEuNTU0Njg3IEMzNzcuMzU2MzI4LDM2Ny4zNDIxODcgNDE0LjM3NSwzNDkuNzExMDk0IDQxNC4zNzUsMjc0LjUgTDM0MS4yNSwyNzQuNSBDMzE0LjMyNTc4MSwyNzQuNSAyOTIuNSwyNTIuNjc0MjE5IDI5Mi41LDIyNS43NSBMMjkyLjUsOTUuNzUgQzI5Mi41LDY4LjgyNTc4MTIgMzE0LjMyNTc4MSw0NyAzNDEuMjUsNDcgTDQ3MS4yNSw0NyBDNDk4LjE3NDIxOSw0NyA1MjAsNjguODI1NzgxMiA1MjAsOTUuNzUgWiBNMTc4Ljc1LDQ3IEw0OC43NSw0NyBDMjEuODI1NzgxMyw0NyAwLDY4LjgyNTc4MTIgMCw5NS43NSBMMCwyMjUuNzUgQzAsMjUyLjY3NDIxOSAyMS44MjU3ODEzLDI3NC41IDQ4Ljc1LDI3NC41IEwxMjEuODc1LDI3NC41IEMxMjEuODc1LDM0OS43MTEwOTQgODQuODU2MzI4MSwzNjcuMzQyMTg3IDE3LjgyODEyNSwzOTEuNTU0Njg3IEM4LjIyMTMyODEzLDM5NS4wMjUwNzggMS44OTYwMTU2Myw0MDQuMjQyODkxIDEuODk2MDE1NjMsNDE0LjQ1NzAzMSBMMS44OTYwMTU2Myw0NDguODgxNjQxIEMxLjg5NjAxNTYzLDQ2NC44ODk5MjIgMTcuMDc3NTc4MSw0NzYuNTg2ODc1IDMyLjU0MDQ2ODcsNDcyLjQ0MzEyNSBDMTY0LjYyNzU3OCw0MzcuMDUwNjI1IDIyNy41LDM2NC45MDg5MDYgMjI3LjUsMjI1Ljc1IEwyMjcuNSw5NS43NSBDMjI3LjUsNjguODI1NzgxMiAyMDUuNjc0MjE5LDQ3IDE3OC43NSw0NyBaXCJcbiAgICAgIC8+XG4gICAgPC9zdmc+XG4gICksXG4gIGV4ZWN1dGU6IChzdGF0ZTogVGV4dFN0YXRlLCBhcGk6IFRleHRBcGkpID0+IHtcbiAgICAvLyBBZGp1c3QgdGhlIHNlbGVjdGlvbiB0byBlbmNvbXBhc3MgdGhlIHdob2xlIHdvcmQgaWYgdGhlIGNhcmV0IGlzIGluc2lkZSBvbmVcbiAgICBjb25zdCBuZXdTZWxlY3Rpb25SYW5nZSA9IHNlbGVjdFdvcmQoeyB0ZXh0OiBzdGF0ZS50ZXh0LCBzZWxlY3Rpb246IHN0YXRlLnNlbGVjdGlvbiB9KTtcbiAgICBjb25zdCBzdGF0ZTEgPSBhcGkuc2V0U2VsZWN0aW9uUmFuZ2UobmV3U2VsZWN0aW9uUmFuZ2UpO1xuICAgIGNvbnN0IGJyZWFrc0JlZm9yZUNvdW50ID0gZ2V0QnJlYWtzTmVlZGVkRm9yRW1wdHlMaW5lQmVmb3JlKHN0YXRlMS50ZXh0LCBzdGF0ZTEuc2VsZWN0aW9uLnN0YXJ0KTtcbiAgICBjb25zdCBicmVha3NCZWZvcmUgPSBBcnJheShicmVha3NCZWZvcmVDb3VudCArIDEpLmpvaW4oJ1xcbicpO1xuXG4gICAgY29uc3QgYnJlYWtzQWZ0ZXJDb3VudCA9IGdldEJyZWFrc05lZWRlZEZvckVtcHR5TGluZUFmdGVyKHN0YXRlMS50ZXh0LCBzdGF0ZTEuc2VsZWN0aW9uLmVuZCk7XG4gICAgY29uc3QgYnJlYWtzQWZ0ZXIgPSBBcnJheShicmVha3NBZnRlckNvdW50ICsgMSkuam9pbignXFxuJyk7XG5cbiAgICAvLyBSZXBsYWNlcyB0aGUgY3VycmVudCBzZWxlY3Rpb24gd2l0aCB0aGUgcXVvdGUgbWFyayB1cFxuICAgIGFwaS5yZXBsYWNlU2VsZWN0aW9uKGAke2JyZWFrc0JlZm9yZX0+ICR7c3RhdGUxLnNlbGVjdGVkVGV4dH0ke2JyZWFrc0FmdGVyfWApO1xuXG4gICAgY29uc3Qgc2VsZWN0aW9uU3RhcnQgPSBzdGF0ZTEuc2VsZWN0aW9uLnN0YXJ0ICsgYnJlYWtzQmVmb3JlQ291bnQgKyAyO1xuICAgIGNvbnN0IHNlbGVjdGlvbkVuZCA9IHNlbGVjdGlvblN0YXJ0ICsgc3RhdGUxLnNlbGVjdGVkVGV4dC5sZW5ndGg7XG5cbiAgICBhcGkuc2V0U2VsZWN0aW9uUmFuZ2Uoe1xuICAgICAgc3RhcnQ6IHNlbGVjdGlvblN0YXJ0LFxuICAgICAgZW5kOiBzZWxlY3Rpb25FbmQsXG4gICAgfSk7XG4gIH0sXG59O1xuIl19