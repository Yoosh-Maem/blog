"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quote = void 0;

var React = _interopRequireWildcard(require("react"));

var _markdownUtils = require("../utils/markdownUtils");

var quote = {
  name: 'quote',
  keyCommand: 'quote',
  shortcuts: 'ctrlcmd+q',
  buttonProps: {
    'aria-label': 'Insert a quote',
    title: 'Insert a quote'
  },
  icon: /*#__PURE__*/React.createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 520 520"
  }, /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    d: "M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z"
  })),
  execute: function execute(state, api) {
    // Adjust the selection to encompass the whole word if the caret is inside one
    var newSelectionRange = (0, _markdownUtils.selectWord)({
      text: state.text,
      selection: state.selection
    });
    var state1 = api.setSelectionRange(newSelectionRange);
    var breaksBeforeCount = (0, _markdownUtils.getBreaksNeededForEmptyLineBefore)(state1.text, state1.selection.start);
    var breaksBefore = Array(breaksBeforeCount + 1).join('\n');
    var breaksAfterCount = (0, _markdownUtils.getBreaksNeededForEmptyLineAfter)(state1.text, state1.selection.end);
    var breaksAfter = Array(breaksAfterCount + 1).join('\n'); // Replaces the current selection with the quote mark up

    api.replaceSelection("".concat(breaksBefore, "> ").concat(state1.selectedText).concat(breaksAfter));
    var selectionStart = state1.selection.start + breaksBeforeCount + 2;
    var selectionEnd = selectionStart + state1.selectedText.length;
    api.setSelectionRange({
      start: selectionStart,
      end: selectionEnd
    });
  }
};
exports.quote = quote;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9xdW90ZS50c3giXSwibmFtZXMiOlsicXVvdGUiLCJuYW1lIiwia2V5Q29tbWFuZCIsInNob3J0Y3V0cyIsImJ1dHRvblByb3BzIiwidGl0bGUiLCJpY29uIiwiZXhlY3V0ZSIsInN0YXRlIiwiYXBpIiwibmV3U2VsZWN0aW9uUmFuZ2UiLCJ0ZXh0Iiwic2VsZWN0aW9uIiwic3RhdGUxIiwic2V0U2VsZWN0aW9uUmFuZ2UiLCJicmVha3NCZWZvcmVDb3VudCIsInN0YXJ0IiwiYnJlYWtzQmVmb3JlIiwiQXJyYXkiLCJqb2luIiwiYnJlYWtzQWZ0ZXJDb3VudCIsImVuZCIsImJyZWFrc0FmdGVyIiwicmVwbGFjZVNlbGVjdGlvbiIsInNlbGVjdGVkVGV4dCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFNTyxJQUFNQSxLQUFlLEdBQUc7QUFDN0JDLEVBQUFBLElBQUksRUFBRSxPQUR1QjtBQUU3QkMsRUFBQUEsVUFBVSxFQUFFLE9BRmlCO0FBRzdCQyxFQUFBQSxTQUFTLEVBQUUsV0FIa0I7QUFJN0JDLEVBQUFBLFdBQVcsRUFBRTtBQUFFLGtCQUFjLGdCQUFoQjtBQUFrQ0MsSUFBQUEsS0FBSyxFQUFFO0FBQXpDLEdBSmdCO0FBSzdCQyxFQUFBQSxJQUFJLGVBQ0Y7QUFBSyxJQUFBLEtBQUssRUFBQyxJQUFYO0FBQWdCLElBQUEsTUFBTSxFQUFDLElBQXZCO0FBQTRCLElBQUEsT0FBTyxFQUFDO0FBQXBDLGtCQUNFO0FBQ0UsSUFBQSxJQUFJLEVBQUMsY0FEUDtBQUVFLElBQUEsQ0FBQyxFQUFDO0FBRkosSUFERixDQU4yQjtBQWE3QkMsRUFBQUEsT0FBTyxFQUFFLGlCQUFDQyxLQUFELEVBQW1CQyxHQUFuQixFQUFvQztBQUMzQztBQUNBLFFBQU1DLGlCQUFpQixHQUFHLCtCQUFXO0FBQUVDLE1BQUFBLElBQUksRUFBRUgsS0FBSyxDQUFDRyxJQUFkO0FBQW9CQyxNQUFBQSxTQUFTLEVBQUVKLEtBQUssQ0FBQ0k7QUFBckMsS0FBWCxDQUExQjtBQUNBLFFBQU1DLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxpQkFBSixDQUFzQkosaUJBQXRCLENBQWY7QUFDQSxRQUFNSyxpQkFBaUIsR0FBRyxzREFBa0NGLE1BQU0sQ0FBQ0YsSUFBekMsRUFBK0NFLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQkksS0FBaEUsQ0FBMUI7QUFDQSxRQUFNQyxZQUFZLEdBQUdDLEtBQUssQ0FBQ0gsaUJBQWlCLEdBQUcsQ0FBckIsQ0FBTCxDQUE2QkksSUFBN0IsQ0FBa0MsSUFBbEMsQ0FBckI7QUFFQSxRQUFNQyxnQkFBZ0IsR0FBRyxxREFBaUNQLE1BQU0sQ0FBQ0YsSUFBeEMsRUFBOENFLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQlMsR0FBL0QsQ0FBekI7QUFDQSxRQUFNQyxXQUFXLEdBQUdKLEtBQUssQ0FBQ0UsZ0JBQWdCLEdBQUcsQ0FBcEIsQ0FBTCxDQUE0QkQsSUFBNUIsQ0FBaUMsSUFBakMsQ0FBcEIsQ0FSMkMsQ0FVM0M7O0FBQ0FWLElBQUFBLEdBQUcsQ0FBQ2MsZ0JBQUosV0FBd0JOLFlBQXhCLGVBQXlDSixNQUFNLENBQUNXLFlBQWhELFNBQStERixXQUEvRDtBQUVBLFFBQU1HLGNBQWMsR0FBR1osTUFBTSxDQUFDRCxTQUFQLENBQWlCSSxLQUFqQixHQUF5QkQsaUJBQXpCLEdBQTZDLENBQXBFO0FBQ0EsUUFBTVcsWUFBWSxHQUFHRCxjQUFjLEdBQUdaLE1BQU0sQ0FBQ1csWUFBUCxDQUFvQkcsTUFBMUQ7QUFFQWxCLElBQUFBLEdBQUcsQ0FBQ0ssaUJBQUosQ0FBc0I7QUFDcEJFLE1BQUFBLEtBQUssRUFBRVMsY0FEYTtBQUVwQkosTUFBQUEsR0FBRyxFQUFFSztBQUZlLEtBQXRCO0FBSUQ7QUFqQzRCLENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSUNvbW1hbmQsIFRleHRTdGF0ZSwgVGV4dEFwaSB9IGZyb20gJy4vJztcbmltcG9ydCB7XG4gIGdldEJyZWFrc05lZWRlZEZvckVtcHR5TGluZUJlZm9yZSxcbiAgZ2V0QnJlYWtzTmVlZGVkRm9yRW1wdHlMaW5lQWZ0ZXIsXG4gIHNlbGVjdFdvcmQsXG59IGZyb20gJy4uL3V0aWxzL21hcmtkb3duVXRpbHMnO1xuXG5leHBvcnQgY29uc3QgcXVvdGU6IElDb21tYW5kID0ge1xuICBuYW1lOiAncXVvdGUnLFxuICBrZXlDb21tYW5kOiAncXVvdGUnLFxuICBzaG9ydGN1dHM6ICdjdHJsY21kK3EnLFxuICBidXR0b25Qcm9wczogeyAnYXJpYS1sYWJlbCc6ICdJbnNlcnQgYSBxdW90ZScsIHRpdGxlOiAnSW5zZXJ0IGEgcXVvdGUnIH0sXG4gIGljb246IChcbiAgICA8c3ZnIHdpZHRoPVwiMTJcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgNTIwIDUyMFwiPlxuICAgICAgPHBhdGhcbiAgICAgICAgZmlsbD1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgIGQ9XCJNNTIwLDk1Ljc1IEw1MjAsMjI1Ljc1IEM1MjAsMzY0LjkwODkwNiA0NTcuMTI3NTc4LDQzNy4wNTA2MjUgMzI1LjA0MDQ2OSw0NzIuNDQzMTI1IEMzMDkuNTc3NTc4LDQ3Ni41ODY4NzUgMjk0LjM5NjAxNiw0NjQuODg5OTIyIDI5NC4zOTYwMTYsNDQ4Ljg4MTY0MSBMMjk0LjM5NjAxNiw0MTQuNDU3MDMxIEMyOTQuMzk2MDE2LDQwNC4yNDI4OTEgMzAwLjcyMTMyOCwzOTUuMDI1MDc4IDMxMC4zMjgxMjUsMzkxLjU1NDY4NyBDMzc3LjM1NjMyOCwzNjcuMzQyMTg3IDQxNC4zNzUsMzQ5LjcxMTA5NCA0MTQuMzc1LDI3NC41IEwzNDEuMjUsMjc0LjUgQzMxNC4zMjU3ODEsMjc0LjUgMjkyLjUsMjUyLjY3NDIxOSAyOTIuNSwyMjUuNzUgTDI5Mi41LDk1Ljc1IEMyOTIuNSw2OC44MjU3ODEyIDMxNC4zMjU3ODEsNDcgMzQxLjI1LDQ3IEw0NzEuMjUsNDcgQzQ5OC4xNzQyMTksNDcgNTIwLDY4LjgyNTc4MTIgNTIwLDk1Ljc1IFogTTE3OC43NSw0NyBMNDguNzUsNDcgQzIxLjgyNTc4MTMsNDcgMCw2OC44MjU3ODEyIDAsOTUuNzUgTDAsMjI1Ljc1IEMwLDI1Mi42NzQyMTkgMjEuODI1NzgxMywyNzQuNSA0OC43NSwyNzQuNSBMMTIxLjg3NSwyNzQuNSBDMTIxLjg3NSwzNDkuNzExMDk0IDg0Ljg1NjMyODEsMzY3LjM0MjE4NyAxNy44MjgxMjUsMzkxLjU1NDY4NyBDOC4yMjEzMjgxMywzOTUuMDI1MDc4IDEuODk2MDE1NjMsNDA0LjI0Mjg5MSAxLjg5NjAxNTYzLDQxNC40NTcwMzEgTDEuODk2MDE1NjMsNDQ4Ljg4MTY0MSBDMS44OTYwMTU2Myw0NjQuODg5OTIyIDE3LjA3NzU3ODEsNDc2LjU4Njg3NSAzMi41NDA0Njg3LDQ3Mi40NDMxMjUgQzE2NC42Mjc1NzgsNDM3LjA1MDYyNSAyMjcuNSwzNjQuOTA4OTA2IDIyNy41LDIyNS43NSBMMjI3LjUsOTUuNzUgQzIyNy41LDY4LjgyNTc4MTIgMjA1LjY3NDIxOSw0NyAxNzguNzUsNDcgWlwiXG4gICAgICAvPlxuICAgIDwvc3ZnPlxuICApLFxuICBleGVjdXRlOiAoc3RhdGU6IFRleHRTdGF0ZSwgYXBpOiBUZXh0QXBpKSA9PiB7XG4gICAgLy8gQWRqdXN0IHRoZSBzZWxlY3Rpb24gdG8gZW5jb21wYXNzIHRoZSB3aG9sZSB3b3JkIGlmIHRoZSBjYXJldCBpcyBpbnNpZGUgb25lXG4gICAgY29uc3QgbmV3U2VsZWN0aW9uUmFuZ2UgPSBzZWxlY3RXb3JkKHsgdGV4dDogc3RhdGUudGV4dCwgc2VsZWN0aW9uOiBzdGF0ZS5zZWxlY3Rpb24gfSk7XG4gICAgY29uc3Qgc3RhdGUxID0gYXBpLnNldFNlbGVjdGlvblJhbmdlKG5ld1NlbGVjdGlvblJhbmdlKTtcbiAgICBjb25zdCBicmVha3NCZWZvcmVDb3VudCA9IGdldEJyZWFrc05lZWRlZEZvckVtcHR5TGluZUJlZm9yZShzdGF0ZTEudGV4dCwgc3RhdGUxLnNlbGVjdGlvbi5zdGFydCk7XG4gICAgY29uc3QgYnJlYWtzQmVmb3JlID0gQXJyYXkoYnJlYWtzQmVmb3JlQ291bnQgKyAxKS5qb2luKCdcXG4nKTtcblxuICAgIGNvbnN0IGJyZWFrc0FmdGVyQ291bnQgPSBnZXRCcmVha3NOZWVkZWRGb3JFbXB0eUxpbmVBZnRlcihzdGF0ZTEudGV4dCwgc3RhdGUxLnNlbGVjdGlvbi5lbmQpO1xuICAgIGNvbnN0IGJyZWFrc0FmdGVyID0gQXJyYXkoYnJlYWtzQWZ0ZXJDb3VudCArIDEpLmpvaW4oJ1xcbicpO1xuXG4gICAgLy8gUmVwbGFjZXMgdGhlIGN1cnJlbnQgc2VsZWN0aW9uIHdpdGggdGhlIHF1b3RlIG1hcmsgdXBcbiAgICBhcGkucmVwbGFjZVNlbGVjdGlvbihgJHticmVha3NCZWZvcmV9PiAke3N0YXRlMS5zZWxlY3RlZFRleHR9JHticmVha3NBZnRlcn1gKTtcblxuICAgIGNvbnN0IHNlbGVjdGlvblN0YXJ0ID0gc3RhdGUxLnNlbGVjdGlvbi5zdGFydCArIGJyZWFrc0JlZm9yZUNvdW50ICsgMjtcbiAgICBjb25zdCBzZWxlY3Rpb25FbmQgPSBzZWxlY3Rpb25TdGFydCArIHN0YXRlMS5zZWxlY3RlZFRleHQubGVuZ3RoO1xuXG4gICAgYXBpLnNldFNlbGVjdGlvblJhbmdlKHtcbiAgICAgIHN0YXJ0OiBzZWxlY3Rpb25TdGFydCxcbiAgICAgIGVuZDogc2VsZWN0aW9uRW5kLFxuICAgIH0pO1xuICB9LFxufTtcbiJdfQ==