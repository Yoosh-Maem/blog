{"ast":null,"code":"/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n  var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n  var constant = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: 'boolean'\n  }, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/, /\\b(?:null)\\b/i];\n  var number = /\\b0b[01]+\\b|\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n  var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n  var punctuation = /[{}\\[\\](),:;]/;\n  Prism.languages.php = {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    },\n    'comment': comment,\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    },\n    'keyword': [{\n      pattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n      alias: 'type-casting',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*[a-z0-9_|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[a-z0-9_|]\\|\\s*)(?:null|false)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:null|false)\\b/i,\n      alias: 'type-declaration',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i],\n    'argument-name': /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n    'class-name': [{\n      pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: true\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: 'class-name-fully-qualified',\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-declaration',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-declaration'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: 'static-context',\n      greedy: true\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: ['class-name-fully-qualified', 'static-context'],\n      greedy: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: 'type-hint',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: ['class-name-fully-qualified', 'type-hint'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: 'return-type',\n      greedy: true,\n      lookbehind: true\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: ['class-name-fully-qualified', 'return-type'],\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\\\/\n      }\n    }],\n    'constant': constant,\n    'function': /\\w+\\s*(?=\\()/,\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    },\n    'number': number,\n    'operator': operator,\n    'punctuation': punctuation\n  };\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)*)/,\n    lookbehind: true,\n    inside: Prism.languages.php\n  };\n  var string = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: 'nowdoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: 'heredoc-string',\n    greedy: true,\n    inside: {\n      'delimiter': {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: 'symbol',\n        inside: {\n          'punctuation': /^<<<\"?|[\";]$/\n        }\n      },\n      'interpolation': string_interpolation // See below\n\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: 'backtick-quoted-string',\n    greedy: true\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: 'single-quoted-string',\n    greedy: true\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: 'double-quoted-string',\n    greedy: true,\n    inside: {\n      'interpolation': string_interpolation // See below\n\n    }\n  }];\n  Prism.languages.insertBefore('php', 'variable', {\n    'string': string\n  });\n  Prism.languages.insertBefore('php', 'variable', {\n    'attribute': {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/mi,\n      greedy: true,\n      inside: {\n        'attribute-content': {\n          pattern: /^(#\\[)[\\s\\S]+(?=]$)/,\n          lookbehind: true,\n          // inside can appear subset of php\n          inside: {\n            'comment': comment,\n            'string': string,\n            'attribute-class-name': [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: 'class-name',\n              greedy: true,\n              lookbehind: true\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: ['class-name', 'class-name-fully-qualified'],\n              greedy: true,\n              lookbehind: true,\n              inside: {\n                'punctuation': /\\\\/\n              }\n            }],\n            'constant': constant,\n            'number': number,\n            'operator': operator,\n            'punctuation': punctuation\n          }\n        },\n        'delimiter': {\n          pattern: /^#\\[|]$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n  });\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);","map":{"version":3,"sources":["C:/Users/yoosh/Desktop/yoosh-maem.github.io/node_modules/prismjs/components/prism-php.js"],"names":["Prism","comment","constant","pattern","alias","number","operator","punctuation","languages","php","lookbehind","inside","greedy","string_interpolation","string","insertBefore","hooks","add","env","test","code","phpPattern","buildPlaceholders","tokenizePlaceholders"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,WAAUA,KAAV,EAAiB;AACjB,MAAIC,OAAO,GAAG,mCAAd;AACA,MAAIC,QAAQ,GAAG,CACd;AACCC,IAAAA,OAAO,EAAE,qBADV;AAECC,IAAAA,KAAK,EAAE;AAFR,GADc,EAKd,+BALc,EAMd,eANc,CAAf;AAQA,MAAIC,MAAM,GAAG,8FAAb;AACA,MAAIC,QAAQ,GAAG,uFAAf;AACA,MAAIC,WAAW,GAAG,eAAlB;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,iBAAa;AACZN,MAAAA,OAAO,EAAE,4BADG;AAEZC,MAAAA,KAAK,EAAE;AAFK,KADQ;AAKrB,eAAWH,OALU;AAMrB,gBAAY,qBANS;AAOrB,eAAW;AACVE,MAAAA,OAAO,EAAE,mEADC;AAEVO,MAAAA,UAAU,EAAE,IAFF;AAGVC,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAHE,KAPU;AAcrB,eAAW,CACV;AACCR,MAAAA,OAAO,EAAE,6EADV;AAECC,MAAAA,KAAK,EAAE,cAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KADU,EAOV;AACCP,MAAAA,OAAO,EAAE,qIADV;AAECC,MAAAA,KAAK,EAAE,WAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KAPU,EAaV;AACCP,MAAAA,OAAO,EAAE,qDADV;AAECC,MAAAA,KAAK,EAAE,WAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KAbU,EAmBV;AACCP,MAAAA,OAAO,EAAE,4IADV;AAECC,MAAAA,KAAK,EAAE,aAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KAnBU,EAyBV;AACCP,MAAAA,OAAO,EAAE,uDADV;AAECC,MAAAA,KAAK,EAAE,aAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KAzBU,EA+BV;AACCP,MAAAA,OAAO,EAAE,kGADV;AAECC,MAAAA,KAAK,EAAE,kBAFR;AAGCQ,MAAAA,MAAM,EAAE;AAHT,KA/BU,EAoCV;AACCT,MAAAA,OAAO,EAAE,0BADV;AAECC,MAAAA,KAAK,EAAE,kBAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KApCU,EA0CV;AACCP,MAAAA,OAAO,EAAE,oCADV;AAECC,MAAAA,KAAK,EAAE,gBAFR;AAGCQ,MAAAA,MAAM,EAAE;AAHT,KA1CU,EA+CV,ifA/CU,CAdU;AA+DrB,qBAAiB,2BA/DI;AAgErB,kBAAc,CACb;AACCT,MAAAA,OAAO,EAAE,0HADV;AAECS,MAAAA,MAAM,EAAE,IAFT;AAGCF,MAAAA,UAAU,EAAE;AAHb,KADa,EAMb;AACCP,MAAAA,OAAO,EAAE,6BADV;AAECS,MAAAA,MAAM,EAAE,IAFT;AAGCF,MAAAA,UAAU,EAAE;AAHb,KANa,EAWb;AACCP,MAAAA,OAAO,EAAE,+BADV;AAECS,MAAAA,MAAM,EAAE;AAFT,KAXa,EAeb;AACCT,MAAAA,OAAO,EAAE,+BADV;AAECC,MAAAA,KAAK,EAAE,4BAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE,IAJb;AAKCC,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AALT,KAfa,EAwBb;AACCR,MAAAA,OAAO,EAAE,iCADV;AAECC,MAAAA,KAAK,EAAE,4BAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICD,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAJT,KAxBa,EAgCb;AACCR,MAAAA,OAAO,EAAE,gHADV;AAECC,MAAAA,KAAK,EAAE,4BAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE,IAJb;AAKCC,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AALT,KAhCa,EAyCb;AACCR,MAAAA,OAAO,EAAE,uBADV;AAECC,MAAAA,KAAK,EAAE,kBAFR;AAGCQ,MAAAA,MAAM,EAAE;AAHT,KAzCa,EA8Cb;AACCT,MAAAA,OAAO,EAAE,+BADV;AAECC,MAAAA,KAAK,EAAE,CAAC,4BAAD,EAA+B,kBAA/B,CAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICD,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAJT,KA9Ca,EAsDb;AACCR,MAAAA,OAAO,EAAE,uBADV;AAECC,MAAAA,KAAK,EAAE,gBAFR;AAGCQ,MAAAA,MAAM,EAAE;AAHT,KAtDa,EA2Db;AACCT,MAAAA,OAAO,EAAE,+BADV;AAECC,MAAAA,KAAK,EAAE,CAAC,4BAAD,EAA+B,gBAA/B,CAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICD,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AAJT,KA3Da,EAmEb;AACCR,MAAAA,OAAO,EAAE,+BADV;AAECC,MAAAA,KAAK,EAAE,WAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KAnEa,EAyEb;AACCP,MAAAA,OAAO,EAAE,yCADV;AAECC,MAAAA,KAAK,EAAE,CAAC,4BAAD,EAA+B,WAA/B,CAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE,IAJb;AAKCC,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AALT,KAzEa,EAkFb;AACCR,MAAAA,OAAO,EAAE,2CADV;AAECC,MAAAA,KAAK,EAAE,aAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE;AAJb,KAlFa,EAwFb;AACCP,MAAAA,OAAO,EAAE,mDADV;AAECC,MAAAA,KAAK,EAAE,CAAC,4BAAD,EAA+B,aAA/B,CAFR;AAGCQ,MAAAA,MAAM,EAAE,IAHT;AAICF,MAAAA,UAAU,EAAE,IAJb;AAKCC,MAAAA,MAAM,EAAE;AACP,uBAAe;AADR;AALT,KAxFa,CAhEO;AAkKrB,gBAAYT,QAlKS;AAmKrB,gBAAY,cAnKS;AAoKrB,gBAAY;AACXC,MAAAA,OAAO,EAAE,WADE;AAEXO,MAAAA,UAAU,EAAE;AAFD,KApKS;AAwKrB,cAAUL,MAxKW;AAyKrB,gBAAYC,QAzKS;AA0KrB,mBAAeC;AA1KM,GAAtB;AA6KA,MAAIM,oBAAoB,GAAG;AAC1BV,IAAAA,OAAO,EAAE,sFADiB;AAE1BO,IAAAA,UAAU,EAAE,IAFc;AAG1BC,IAAAA,MAAM,EAAEX,KAAK,CAACQ,SAAN,CAAgBC;AAHE,GAA3B;AAMA,MAAIK,MAAM,GAAG,CACZ;AACCX,IAAAA,OAAO,EAAE,qCADV;AAECC,IAAAA,KAAK,EAAE,eAFR;AAGCQ,IAAAA,MAAM,EAAE,IAHT;AAICD,IAAAA,MAAM,EAAE;AACP,mBAAa;AACZR,QAAAA,OAAO,EAAE,0BADG;AAEZC,QAAAA,KAAK,EAAE,QAFK;AAGZO,QAAAA,MAAM,EAAE;AACP,yBAAe;AADR;AAHI;AADN;AAJT,GADY,EAeZ;AACCR,IAAAA,OAAO,EAAE,6EADV;AAECC,IAAAA,KAAK,EAAE,gBAFR;AAGCQ,IAAAA,MAAM,EAAE,IAHT;AAICD,IAAAA,MAAM,EAAE;AACP,mBAAa;AACZR,QAAAA,OAAO,EAAE,wCADG;AAEZC,QAAAA,KAAK,EAAE,QAFK;AAGZO,QAAAA,MAAM,EAAE;AACP,yBAAe;AADR;AAHI,OADN;AAQP,uBAAiBE,oBARV,CAQ+B;;AAR/B;AAJT,GAfY,EA8BZ;AACCV,IAAAA,OAAO,EAAE,wBADV;AAECC,IAAAA,KAAK,EAAE,wBAFR;AAGCQ,IAAAA,MAAM,EAAE;AAHT,GA9BY,EAmCZ;AACCT,IAAAA,OAAO,EAAE,wBADV;AAECC,IAAAA,KAAK,EAAE,sBAFR;AAGCQ,IAAAA,MAAM,EAAE;AAHT,GAnCY,EAwCZ;AACCT,IAAAA,OAAO,EAAE,wBADV;AAECC,IAAAA,KAAK,EAAE,sBAFR;AAGCQ,IAAAA,MAAM,EAAE,IAHT;AAICD,IAAAA,MAAM,EAAE;AACP,uBAAiBE,oBADV,CAC+B;;AAD/B;AAJT,GAxCY,CAAb;AAkDAb,EAAAA,KAAK,CAACQ,SAAN,CAAgBO,YAAhB,CAA6B,KAA7B,EAAoC,UAApC,EAAgD;AAC/C,cAAUD;AADqC,GAAhD;AAIAd,EAAAA,KAAK,CAACQ,SAAN,CAAgBO,YAAhB,CAA6B,KAA7B,EAAoC,UAApC,EAAgD;AAC/C,iBAAa;AACZZ,MAAAA,OAAO,EAAE,2IADG;AAEZS,MAAAA,MAAM,EAAE,IAFI;AAGZD,MAAAA,MAAM,EAAE;AACP,6BAAqB;AACpBR,UAAAA,OAAO,EAAE,qBADW;AAEpBO,UAAAA,UAAU,EAAE,IAFQ;AAGpB;AACAC,UAAAA,MAAM,EAAE;AACP,uBAAWV,OADJ;AAEP,sBAAUa,MAFH;AAGP,oCAAwB,CACvB;AACCX,cAAAA,OAAO,EAAE,8BADV;AAECC,cAAAA,KAAK,EAAE,YAFR;AAGCQ,cAAAA,MAAM,EAAE,IAHT;AAICF,cAAAA,UAAU,EAAE;AAJb,aADuB,EAOvB;AACCP,cAAAA,OAAO,EAAE,8BADV;AAECC,cAAAA,KAAK,EAAE,CACN,YADM,EAEN,4BAFM,CAFR;AAMCQ,cAAAA,MAAM,EAAE,IANT;AAOCF,cAAAA,UAAU,EAAE,IAPb;AAQCC,cAAAA,MAAM,EAAE;AACP,+BAAe;AADR;AART,aAPuB,CAHjB;AAuBP,wBAAYT,QAvBL;AAwBP,sBAAUG,MAxBH;AAyBP,wBAAYC,QAzBL;AA0BP,2BAAeC;AA1BR;AAJY,SADd;AAkCP,qBAAa;AACZJ,UAAAA,OAAO,EAAE,SADG;AAEZC,UAAAA,KAAK,EAAE;AAFK;AAlCN;AAHI;AADkC,GAAhD;AA8CAJ,EAAAA,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAASC,GAAT,EAAc;AAChD,QAAI,CAAC,MAAMC,IAAN,CAAWD,GAAG,CAACE,IAAf,CAAL,EAA2B;AAC1B;AACA;;AAED,QAAIC,UAAU,GAAG,oKAAjB;AACArB,IAAAA,KAAK,CAACQ,SAAN,CAAgB,mBAAhB,EAAqCc,iBAArC,CAAuDJ,GAAvD,EAA4D,KAA5D,EAAmEG,UAAnE;AACA,GAPD;AASArB,EAAAA,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAASC,GAAT,EAAc;AAC/ClB,IAAAA,KAAK,CAACQ,SAAN,CAAgB,mBAAhB,EAAqCe,oBAArC,CAA0DL,GAA1D,EAA+D,KAA/D;AACA,GAFD;AAIA,CAlTA,EAkTClB,KAlTD,CAAD","sourcesContent":["/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n * Rewritten by Tom Pavelec\n *\n * Supports PHP 5.3 - 8.0\n */\n(function (Prism) {\n\tvar comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n\tvar constant = [\n\t\t{\n\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\talias: 'boolean'\n\t\t},\n\t\t/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/,\n\t\t/\\b(?:null)\\b/i,\n\t];\n\tvar number = /\\b0b[01]+\\b|\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n\tvar operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n\tvar punctuation = /[{}\\[\\](),:;]/;\n\n\tPrism.languages.php = {\n\t\t'delimiter': {\n\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': comment,\n\t\t'variable': /\\$+(?:\\w+\\b|(?={))/i,\n\t\t'package': {\n\t\t\tpattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\\\/\n\t\t\t}\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n\t\t\t\talias: 'type-casting',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*[a-z0-9_|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[a-z0-9_|]\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)(?:null|false)\\b/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n\t\t\t\talias: 'static-context',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t/\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i\n\t\t],\n\t\t'argument-name': /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\talias: 'class-name-fully-qualified',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-declaration',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'type-declaration'],\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n\t\t\t\talias: 'static-context',\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'static-context'],\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n\t\t\t\talias: 'type-hint',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'type-hint'],\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\talias: 'return-type',\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n\t\t\t\talias: ['class-name-fully-qualified', 'return-type'],\n\t\t\t\tgreedy: true,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'constant': constant,\n\t\t'function': /\\w+\\s*(?=\\()/,\n\t\t'property': {\n\t\t\tpattern: /(->)[\\w]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': number,\n\t\t'operator': operator,\n\t\t'punctuation': punctuation\n\t};\n\n\tvar string_interpolation = {\n\t\tpattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)*)/,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages.php\n\t};\n\n\tvar string = [\n\t\t{\n\t\t\tpattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n\t\t\talias: 'nowdoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n\t\t\talias: 'heredoc-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\t\talias: 'backtick-quoted-string',\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\talias: 'single-quoted-string',\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\talias: 'double-quoted-string',\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t}\n\t];\n\n\tPrism.languages.insertBefore('php', 'variable', {\n\t\t'string': string,\n\t});\n\n\tPrism.languages.insertBefore('php', 'variable', {\n\t\t'attribute': {\n\t\t\tpattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/mi,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'attribute-content': {\n\t\t\t\t\tpattern: /^(#\\[)[\\s\\S]+(?=]$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t// inside can appear subset of php\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': comment,\n\t\t\t\t\t\t'string': string,\n\t\t\t\t\t\t'attribute-class-name': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n\t\t\t\t\t\t\t\talias: 'class-name',\n\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n\t\t\t\t\t\t\t\talias: [\n\t\t\t\t\t\t\t\t\t'class-name',\n\t\t\t\t\t\t\t\t\t'class-name-fully-qualified'\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\t'punctuation': /\\\\/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'constant': constant,\n\t\t\t\t\t\t'number': number,\n\t\t\t\t\t\t'operator': operator,\n\t\t\t\t\t\t'punctuation': punctuation\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^#\\[|]$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tif (!/<\\?/.test(env.code)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t});\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}