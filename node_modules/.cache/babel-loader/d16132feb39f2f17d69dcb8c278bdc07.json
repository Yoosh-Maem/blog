{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\nfunction getCommands() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var resulte = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  data.forEach(function (item) {\n    if (item.children && Array.isArray(item.children)) {\n      resulte = _objectSpread(_objectSpread({}, resulte), getCommands(item.children || []));\n    } else if (item.keyCommand && item.shortcuts && item.execute) {\n      resulte[item.shortcuts.toLocaleLowerCase()] = item;\n    }\n  });\n  return resulte;\n}\n\nexport default function shortcutsHandle(e) {\n  var commands = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var commandOrchestrator = arguments.length > 2 ? arguments[2] : undefined;\n  var data = getCommands(commands || []);\n  var shortcuts = [];\n\n  if (e.altKey) {\n    shortcuts.push('alt');\n  }\n\n  if (e.shiftKey) {\n    shortcuts.push('shift');\n  }\n\n  if (e.metaKey) {\n    shortcuts.push('cmd');\n  }\n\n  if (e.ctrlKey) {\n    shortcuts.push('ctrl');\n  }\n\n  if (shortcuts.length > 0 && !/(control|alt|meta|shift)/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push(e.key.toLocaleLowerCase());\n  }\n\n  if (shortcuts.length < 2) {\n    return;\n  }\n\n  var equal = !!data[shortcuts.join('+')];\n  var command = equal ? data[shortcuts.join('+')] : undefined;\n  Object.keys(data).forEach(function (item) {\n    var isequal = item.split('+').every(function (v) {\n      if (/ctrlcmd/.test(v)) {\n        return shortcuts.includes('ctrl') || shortcuts.includes('cmd');\n      }\n\n      return shortcuts.includes(v);\n    });\n\n    if (isequal) {\n      command = data[item];\n    }\n  });\n\n  if (command && commandOrchestrator) {\n    e.stopPropagation();\n    e.preventDefault();\n    commandOrchestrator.executeCommand(command);\n    return;\n  }\n}","map":{"version":3,"sources":["../../../../src/components/TextArea/shortcuts.ts"],"names":["data","resulte","item","Array","getCommands","commands","commandOrchestrator","shortcuts","e","equal","command","Object","isequal"],"mappings":"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","sourcesContent":["import { ICommand, TextAreaCommandOrchestrator } from '../../commands';\n\nfunction getCommands(data: ICommand[] = [], resulte: Record<string, ICommand> = {}): Record<string, ICommand> {\n  data.forEach((item) => {\n    if (item.children && Array.isArray(item.children)) {\n      resulte = { ...resulte, ...getCommands(item.children || []) };\n    } else if (item.keyCommand && item.shortcuts && item.execute) {\n      resulte[item.shortcuts.toLocaleLowerCase()] = item;\n    }\n  });\n  return resulte;\n}\n\nexport default function shortcutsHandle(\n  e: React.KeyboardEvent<HTMLTextAreaElement>,\n  commands: ICommand[] = [],\n  commandOrchestrator?: TextAreaCommandOrchestrator,\n) {\n  const data = getCommands(commands || []);\n  const shortcuts: (string | number)[] = [];\n  if (e.altKey) {\n    shortcuts.push('alt');\n  }\n  if (e.shiftKey) {\n    shortcuts.push('shift');\n  }\n  if (e.metaKey) {\n    shortcuts.push('cmd');\n  }\n  if (e.ctrlKey) {\n    shortcuts.push('ctrl');\n  }\n  if (shortcuts.length > 0 && !/(control|alt|meta|shift)/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push(e.key.toLocaleLowerCase());\n  }\n  if (shortcuts.length < 2) {\n    return;\n  }\n\n  let equal = !!data[shortcuts.join('+')];\n  let command = equal ? data[shortcuts.join('+')] : undefined;\n\n  Object.keys(data).forEach((item) => {\n    const isequal = item.split('+').every((v) => {\n      if (/ctrlcmd/.test(v)) {\n        return shortcuts.includes('ctrl') || shortcuts.includes('cmd');\n      }\n      return shortcuts.includes(v);\n    });\n    if (isequal) {\n      command = data[item];\n    }\n  });\n  if (command && commandOrchestrator) {\n    e.stopPropagation();\n    e.preventDefault();\n    commandOrchestrator.executeCommand(command);\n    return;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}