{"ast":null,"code":"!function (a) {\n  var e = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/,\n      t = [{\n    pattern: /\\b(?:false|true)\\b/i,\n    alias: \"boolean\"\n  }, /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/, /\\b(?:null)\\b/i],\n      i = /\\b0b[01]+\\b|\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n      n = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,\n      s = /[{}\\[\\](),:;]/;\n  a.languages.php = {\n    delimiter: {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: \"important\"\n    },\n    comment: e,\n    variable: /\\$+(?:\\w+\\b|(?={))/i,\n    package: {\n      pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    },\n    keyword: [{\n      pattern: /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n      alias: \"type-casting\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n      alias: \"type-hint\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /([(,?]\\s*[a-z0-9_|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n      alias: \"type-hint\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: \"return-type\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[a-z0-9_|]\\|\\s*)(?:null|false)\\b/i,\n      alias: \"return-type\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n      alias: \"type-declaration\",\n      greedy: !0\n    }, {\n      pattern: /(\\|\\s*)(?:null|false)\\b/i,\n      alias: \"type-declaration\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n      alias: \"static-context\",\n      greedy: !0\n    }, /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i],\n    \"argument-name\": /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n    \"class-name\": [{\n      pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n      greedy: !0\n    }, {\n      pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n      alias: \"class-name-fully-qualified\",\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n      alias: \"class-name-fully-qualified\",\n      greedy: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: \"class-name-fully-qualified\",\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: \"type-declaration\",\n      greedy: !0\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: [\"class-name-fully-qualified\", \"type-declaration\"],\n      greedy: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n      alias: \"static-context\",\n      greedy: !0\n    }, {\n      pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n      alias: [\"class-name-fully-qualified\", \"static-context\"],\n      greedy: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n      alias: \"type-hint\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n      alias: [\"class-name-fully-qualified\", \"type-hint\"],\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n      alias: \"return-type\",\n      greedy: !0,\n      lookbehind: !0\n    }, {\n      pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n      alias: [\"class-name-fully-qualified\", \"return-type\"],\n      greedy: !0,\n      lookbehind: !0,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }],\n    constant: t,\n    function: /\\w+\\s*(?=\\()/,\n    property: {\n      pattern: /(->)[\\w]+/,\n      lookbehind: !0\n    },\n    number: i,\n    operator: n,\n    punctuation: s\n  };\n  var l = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)*)/,\n    lookbehind: !0,\n    inside: a.languages.php\n  },\n      r = [{\n    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n    alias: \"nowdoc-string\",\n    greedy: !0,\n    inside: {\n      delimiter: {\n        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n        alias: \"symbol\",\n        inside: {\n          punctuation: /^<<<'?|[';]$/\n        }\n      }\n    }\n  }, {\n    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n    alias: \"heredoc-string\",\n    greedy: !0,\n    inside: {\n      delimiter: {\n        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n        alias: \"symbol\",\n        inside: {\n          punctuation: /^<<<\"?|[\";]$/\n        }\n      },\n      interpolation: l\n    }\n  }, {\n    pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n    alias: \"backtick-quoted-string\",\n    greedy: !0\n  }, {\n    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n    alias: \"single-quoted-string\",\n    greedy: !0\n  }, {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n    alias: \"double-quoted-string\",\n    greedy: !0,\n    inside: {\n      interpolation: l\n    }\n  }];\n  a.languages.insertBefore(\"php\", \"variable\", {\n    string: r\n  }), a.languages.insertBefore(\"php\", \"variable\", {\n    attribute: {\n      pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n      greedy: !0,\n      inside: {\n        \"attribute-content\": {\n          pattern: /^(#\\[)[\\s\\S]+(?=]$)/,\n          lookbehind: !0,\n          inside: {\n            comment: e,\n            string: r,\n            \"attribute-class-name\": [{\n              pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n              alias: \"class-name\",\n              greedy: !0,\n              lookbehind: !0\n            }, {\n              pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n              alias: [\"class-name\", \"class-name-fully-qualified\"],\n              greedy: !0,\n              lookbehind: !0,\n              inside: {\n                punctuation: /\\\\/\n              }\n            }],\n            constant: t,\n            number: i,\n            operator: n,\n            punctuation: s\n          }\n        },\n        delimiter: {\n          pattern: /^#\\[|]$/,\n          alias: \"punctuation\"\n        }\n      }\n    }\n  }), a.hooks.add(\"before-tokenize\", function (e) {\n    if (/<\\?/.test(e.code)) {\n      a.languages[\"markup-templating\"].buildPlaceholders(e, \"php\", /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi);\n    }\n  }), a.hooks.add(\"after-tokenize\", function (e) {\n    a.languages[\"markup-templating\"].tokenizePlaceholders(e, \"php\");\n  });\n}(Prism);","map":{"version":3,"sources":["C:/Users/yoosh/Desktop/yoosh-maem.github.io/node_modules/prismjs/components/prism-php.min.js"],"names":["a","e","t","pattern","alias","i","n","s","languages","php","delimiter","comment","variable","package","lookbehind","inside","punctuation","keyword","greedy","constant","function","property","number","operator","l","r","interpolation","insertBefore","string","attribute","hooks","add","test","code","buildPlaceholders","tokenizePlaceholders","Prism"],"mappings":"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","sourcesContent":["!function(a){var e=/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/,t=[{pattern:/\\b(?:false|true)\\b/i,alias:\"boolean\"},/\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/,/\\b(?:null)\\b/i],i=/\\b0b[01]+\\b|\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,n=/<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,s=/[{}\\[\\](),:;]/;a.languages.php={delimiter:{pattern:/\\?>$|^<\\?(?:php(?=\\s)|=)?/i,alias:\"important\"},comment:e,variable:/\\$+(?:\\w+\\b|(?={))/i,package:{pattern:/(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,lookbehind:!0,inside:{punctuation:/\\\\/}},keyword:[{pattern:/(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,alias:\"type-casting\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*[a-z0-9_|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?[a-z0-9_|]\\|\\s*)(?:null|false)\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,alias:\"type-declaration\",greedy:!0},{pattern:/(\\|\\s*)(?:null|false)\\b/i,alias:\"type-declaration\",greedy:!0,lookbehind:!0},{pattern:/\\b(?:parent|self|static)(?=\\s*::)/i,alias:\"static-context\",greedy:!0},/\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i],\"argument-name\":/\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\"class-name\":[{pattern:/(\\b(?:class|interface|extends|implements|trait|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,greedy:!0,lookbehind:!0},{pattern:/(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,greedy:!0,lookbehind:!0},{pattern:/\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,greedy:!0},{pattern:/(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,alias:\"class-name-fully-qualified\",greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,alias:\"class-name-fully-qualified\",greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,alias:\"class-name-fully-qualified\",greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/\\b[a-z_]\\w*(?=\\s*\\$)/i,alias:\"type-declaration\",greedy:!0},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,alias:[\"class-name-fully-qualified\",\"type-declaration\"],greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/\\b[a-z_]\\w*(?=\\s*::)/i,alias:\"static-context\",greedy:!0},{pattern:/(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,alias:[\"class-name-fully-qualified\",\"static-context\"],greedy:!0,inside:{punctuation:/\\\\/}},{pattern:/([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,alias:\"type-hint\",greedy:!0,lookbehind:!0},{pattern:/([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,alias:[\"class-name-fully-qualified\",\"type-hint\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,alias:\"return-type\",greedy:!0,lookbehind:!0},{pattern:/(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,alias:[\"class-name-fully-qualified\",\"return-type\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}}],constant:t,function:/\\w+\\s*(?=\\()/,property:{pattern:/(->)[\\w]+/,lookbehind:!0},number:i,operator:n,punctuation:s};var l={pattern:/{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)*)/,lookbehind:!0,inside:a.languages.php},r=[{pattern:/<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,alias:\"nowdoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<'?|[';]$/}}}},{pattern:/<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,alias:\"heredoc-string\",greedy:!0,inside:{delimiter:{pattern:/^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,alias:\"symbol\",inside:{punctuation:/^<<<\"?|[\";]$/}},interpolation:l}},{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,alias:\"backtick-quoted-string\",greedy:!0},{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,alias:\"single-quoted-string\",greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,alias:\"double-quoted-string\",greedy:!0,inside:{interpolation:l}}];a.languages.insertBefore(\"php\",\"variable\",{string:r}),a.languages.insertBefore(\"php\",\"variable\",{attribute:{pattern:/#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,greedy:!0,inside:{\"attribute-content\":{pattern:/^(#\\[)[\\s\\S]+(?=]$)/,lookbehind:!0,inside:{comment:e,string:r,\"attribute-class-name\":[{pattern:/([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,alias:\"class-name\",greedy:!0,lookbehind:!0},{pattern:/([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,alias:[\"class-name\",\"class-name-fully-qualified\"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\\\/}}],constant:t,number:i,operator:n,punctuation:s}},delimiter:{pattern:/^#\\[|]$/,alias:\"punctuation\"}}}}),a.hooks.add(\"before-tokenize\",function(e){if(/<\\?/.test(e.code)){a.languages[\"markup-templating\"].buildPlaceholders(e,\"php\",/<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi)}}),a.hooks.add(\"after-tokenize\",function(e){a.languages[\"markup-templating\"].tokenizePlaceholders(e,\"php\")})}(Prism);"]},"metadata":{},"sourceType":"script"}